@using System.Web.Optimization;
@using SimpleCrypto;
@model library_prototype.Models.MultipleModel.UserIndexVM
@{
    ViewBag.Title = "UserIndex";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var userRegistration = TempData["UserRegistration"] as library_prototype.Models.MultipleModel.UserIndexVM;
}
@Scripts.Render("~/Scripts/components/grid.js")
<script type="text/javascript">
			var clock;

			$(document).ready(function () {
			});
</script>
<div class="uk-margin-remove uk-align-center">
    <h1 class="">
        <span class="uk-vertical-align-middle">@Html.ActionLink(" ", "SectionIndex", "Admin", new { id = Model.GroupID }, new { @class = "uk-slidenav uk-slidenav-previous" })</span>
        @Html.DisplayFor(s=>s.SectionName)
    </h1>
    @if (Model.Error == true)
    {
        foreach (var error in Model.Message)
        {
            <script>
            $(document).ready(function () {
                UIkit.notify('@Html.DisplayFor(modelItem => error)', { status: 'warning', timeout: 0, pos: 'bottom-right' });
            });
            </script>
        }
    }
    else if (Model.Error == false)
    {
        <script>
            $(document).ready(function () {
                UIkit.notify('@Html.DisplayFor(m=>m.Message[0])', { status: 'success', timeout: 5000, pos: 'bottom-right' });
            });
        </script>
    }
    <ul class="uk-subnav uk-subnav-pill uk-margin-large-left">
        <li class="uk-active">
            <a class="" data-uk-modal="{target:'#create-user'}"><i class="uk-icon-plus-square"></i> Create</a>
        </li>
    </ul>
    <ul id="sort1" class="uk-subnav uk-subnav-pill uk-margin-large-left">
        <li data-uk-sort="my-category">
            <a href="#">Ascending</a>
        </li>
        <li data-uk-sort="my-category:desc">
            <a href="#">Descending</a>
        </li>
    </ul>
</div>
<div class="uk-margin-left">
    @if (Model.Users.Count == 0)
    {
        <h2 class="uk-text-warning">There is no existing user in this section</h2>
    }
    else
    {
        <div class="uk-grid-small" data-uk-grid="{controls:'#sort1'}">
            @foreach (var item in Model.Users)
            {
                <div class="uk-animation-scale-up" data-my-category="@Html.DisplayFor(modelItem => item.Student.LastName)">
                    <div class="uk-text-center">
                        <div class="uk-thumbnail uk-overlay-hover uk-border-circle">
                            <figure class="uk-overlay">
                                <img class="uk-border-circle" width="150" height="150" src="@Url.Content("~/Image/default/profile_picture.png")" />
                                <figcaption class="uk-overlay-panel uk-overlay-background uk-flex uk-flex-center uk-flex-middle uk-text-center uk-border-circle">
                                    <div>
                                        <a href="/Admin/ShowUser" class="uk-icon-button uk-icon-user"></a>
                                        <a href="#" class="uk-icon-button uk-icon-book"></a>
                                        @Html.ActionLink(" ", "UserInformation", new { id = item.Id }, new { @class = "uk-icon-button uk-icon-gear" })
                                    </div>
                                </figcaption>
                            </figure>
                        </div>
                        <h6 class="uk-margin-bottom-remove uk-margin-top-remove uk-text-center">
                            @Html.DisplayFor(modelItem => item.Email)
                        </h6>
                        <h2 class="uk-margin-bottom-remove uk-margin-top-remove uk-text-center">
                            @Html.DisplayFor(modelItem => item.Student.LastName), @Html.DisplayFor(modelItem => item.Student.FirstName)
                        </h2>
                        <p class="uk-text-muted uk-margin-top-remove">
                            Status
                        </p>
                    </div>
                </div>
            }
        </div>
    }
</div>
<div id="create-user" class="uk-modal">
    @using (Html.BeginForm("CreateUser", "Admin", FormMethod.Post, new { @class = "uk-form uk-form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div class="uk-modal-dialog">
            <a class="uk-modal-close uk-close"></a>
            <form class="uk-form uk-form-horizontal">
                <fieldset data-uk-margin>
                    <legend>Account Registration</legend>
                    @Html.HiddenFor(u => u.SectionID)
                    <div class="uk-form-row">
                        @Html.LabelFor(u => u.Register.FirstName, new { @for = "firstName", @class = "uk-form-label" })
                        <div class="uk-form-controls">
                            @Html.TextBoxFor(u => u.Register.FirstName, new { @placeholder = "first name", @id = "firstName", @required="required" })
                            @Html.ValidationMessageFor(u => u.Register.FirstName, null, new { @class = "uk-form-danger" })
                        </div>
                    </div>
                    <div class="uk-form-row">
                        @Html.LabelFor(u => u.Register.MiddleInitial, new { @for = "middleInitial", @class = "uk-form-label" })
                        <div class="uk-form-controls">
                            @Html.TextBoxFor(u => u.Register.MiddleInitial, new { @placeholder = "middle initial", @id = "middleInitial", @required = "required" })
                            @Html.ValidationMessageFor(u => u.Register.MiddleInitial, null, new { @class = "uk-form-danger" })
                        </div>
                    </div>
                    <div class="uk-form-row">
                        @Html.LabelFor(u => u.Register.LastName, new { @for = "lastName", @class = "uk-form-label" })
                        <div class="uk-form-controls">
                            @Html.TextBoxFor(u => u.Register.LastName, new { @placeholder = "last name", @id = "lastName", @required = "required" })
                            @Html.ValidationMessageFor(u => u.Register.LastName, null, new { @class = "uk-form-danger" })
                        </div>
                    </div>
                    <div class="uk-form-row">
                        @Html.LabelFor(u => u.Register.Gender, new { @for = "gender", @class = "uk-form-label" })
                        <div class="uk-form-controls">
                            @Html.DropDownListFor(u => u.Register.Gender, new List<SelectListItem>
                               {
                                   new SelectListItem(){Text = "Male", Value = "male", Selected=true},
                                   new SelectListItem(){Text = "Female", Value = "female"},
                               }, new { @id = "gender" })
                        </div>
                    </div>
                    <div class="uk-form-row">
                        @Html.LabelFor(u => u.Register.EmailAddress, new { @for = "emailAddress", @class = "uk-form-label" })
                        <div class="uk-form-controls">
                            @Html.TextBoxFor(u => u.Register.EmailAddress, new { @placeholder = "email address", @id = "emailAddress", @required = "required", @type="email" })
                            @Html.ValidationMessageFor(u => u.Register.EmailAddress, null, new { @class = "uk-form-danger" })
                        </div>
                    </div>
                    <div class="uk-form-row">
                        <button type="submit" class="uk-width-1-5 uk-align-right uk-button uk-button-primary">Submit</button>
                    </div>
                </fieldset>
            </form>
        </div>
    }
</div>
